---
# tasks file for mongo
- name: create ncf.env file
  template:
    src: ncf.env.j2
    dest: /data/ncf/conf/ncf.env
    owner: root
    group: root
    mode: 0644

    #- name: create host_ip and dns_ip file
    #  file:
    #    path: "{{ item }}"
    #    state: touch
    #  with_items:
    #    - /run/ncf/dns_ip
    #    - /run/ncf/host_ip

- name: create host_ip.sh file
  template:
    src: host_ip.sh.j2
    dest: /data/ncf/scripts
    owner: root
    group: root
    mode: 0644   

- name: create mongo.service in fleetservices
  template:
    src: mongo@.service.j2
    dest: /data/ncf/fleetServices/mongo@.service
    owner: root
    group: root
    mode: 0644

- name: create mongo@1.service in server 1
  template:
    src: mongo@.service.j2
    dest: /var/run/fleet/units/mongo@1.service
    owner: root
    group: root
    mode: 0644
  when: inventory_hostname == play_hosts[0]

- name: create mongo@2.service in server 2
  template:
    src: mongo@.service.j2
    dest: /var/run/fleet/units/mongo@1.service
    owner: root
    group: root
    mode: 0644
  when: inventory_hostname != play_hosts[0]
       
- name: create registrator.service
  template:
    src: registrator.service.j2
    dest: "{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - /data/ncf/fleetServices/registrator.service
    - /var/run/fleet/units/registrator.service 

- name: create skydns.service in fleetservices
  template:
    src: skydns2.service.j2
    dest: "{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - /data/ncf/fleetServices/skydns2.service
    - /var/run/fleet/units/skydns2.service  

